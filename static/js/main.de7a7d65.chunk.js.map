{"version":3,"sources":["api/users.ts","services/user.ts","rendering/Render.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","Render","todoList","onSubmit","useState","title","setTitle","hasTitleError","setHasTitleError","setUser","hasUserError","setHasUserError","action","method","event","preventDefault","todos","newTodo","Math","max","map","el","trim","completed","className","type","value","onChange","target","disabled","users","App","list","setList","newList","currentList","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de7a7d65.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n","import React, { useState } from 'react';\nimport users from '../api/users';\nimport { Todo } from '../types/Todo';\nimport { User } from '../types/User';\nimport { getUserById } from '../services/user';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n  todoList: Todo[];\n};\n\nconst getNewId = (todos: Todo[]) => {\n  return Math.max(...todos.map(el => el.id), 0) + 1;\n};\n\nexport const Render: React.FC<Props> = ({ todoList, onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [user, setUser] = useState('');\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const reset = () => {\n    setTitle('');\n    setUser('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserError(!user);\n\n    if (!title || !user) {\n      return;\n    }\n\n    reset();\n\n    const newTodo: Todo = {\n      id: getNewId(todoList),\n      title: title.trim(),\n      completed: false,\n      userId: +user,\n      user: getUserById(+user),\n    };\n\n    onSubmit(newTodo);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUser(event.target.value);\n    setHasUserError(false);\n  };\n\n  return (\n    <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={(event) => {\n            setTitle(event.target.value);\n            setHasTitleError(false);\n          }}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          value={user}\n          data-cy=\"userSelect\"\n          onChange={handleUserChange}\n        >\n          <option value=\"\" disabled>Choose a user</option>\n\n          {users.map((el: User) => (\n            <option\n              value={el.id}\n              key={el.id}\n            >\n              {el.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserError && user === '' && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { Render } from './rendering/Render';\nimport { Todo } from './types/Todo';\nimport todosFromServer from './api/todos';\nimport { getUserById } from './services/user';\n\nconst todos = todosFromServer.map(el => {\n  return {\n    ...el,\n    user: getUserById(el.userId),\n  };\n});\n\nexport const App = () => {\n  const [list, setList] = useState<Todo[]>(todos);\n\n  const addList = (newList: Todo) => {\n    setList((currentList) => [...currentList, newList]);\n  };\n\n  return (\n    <div>\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n        <Render\n          todoList={list}\n          onSubmit={addList}\n        />\n        <section className=\"TodoList\">\n          <article data-id=\"1\" className=\"TodoInfo TodoInfo--completed\">\n            <h2 className=\"TodoInfo__title\">\n              delectus aut autem\n            </h2>\n\n            <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n              Leanne Graham\n            </a>\n          </article>\n\n          <article data-id=\"15\" className=\"TodoInfo TodoInfo--completed\">\n            <h2 className=\"TodoInfo__title\">delectus aut autem</h2>\n\n            <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n              Leanne Graham\n            </a>\n          </article>\n\n          <article data-id=\"2\" className=\"TodoInfo\">\n            <h2 className=\"TodoInfo__title\">\n              quis ut nam facilis et officia qui\n            </h2>\n\n            <a className=\"UserInfo\" href=\"mailto:Julianne.OConner@kory.org\">\n              Patricia Lebsack\n            </a>\n          </article>\n        </section>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n    user: 0,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n    user: 0,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n    user: 0,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}