{"version":3,"sources":["api/users.ts","services/user.ts","rendering/Render.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","Render","todoList","onSubmit","useState","title","setTitle","hasTitleError","setHasTitleError","setUser","hasUserError","setHasUserError","action","method","event","preventDefault","trimmedTitle","trim","todos","newTodo","Math","max","map","el","completed","className","type","value","onChange","target","disabled","users","UserInfo","href","TodoInfo","todo","TodoList","App","list","setList","newList","currentList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1d19bb6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n","import React, { useState } from 'react';\nimport users from '../api/users';\nimport { Todo } from '../types/Todo';\nimport { User } from '../types/User';\nimport { getUserById } from '../services/user';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n  todoList: Todo[];\n};\n\nconst getNewId = (todos: Todo[]): number => {\n  return Math.max(...todos.map(el => el.id), 0) + 1;\n};\n\nexport const Render: React.FC<Props> = ({ todoList, onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [user, setUser] = useState('');\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const reset = () => {\n    setTitle('');\n    setUser('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimmedTitle = title.trim();\n\n    setHasTitleError(!trimmedTitle);\n    setHasUserError(!user);\n\n    if (!trimmedTitle || !user) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: getNewId(todoList),\n      title: trimmedTitle,\n      completed: false,\n      userId: +user,\n      user: getUserById(+user),\n    };\n\n    onSubmit(newTodo);\n\n    reset();\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUser(event.target.value);\n    setHasUserError(false);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={(event) => {\n            setTitle(event.target.value);\n            setHasTitleError(false);\n          }}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          value={user}\n          data-cy=\"userSelect\"\n          onChange={handleUserChange}\n        >\n          <option value=\"\" disabled>Choose a user</option>\n\n          {users.map((el: User) => (\n            <option\n              value={el.id}\n              key={el.id}\n            >\n              {el.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserError && user === '' && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n\n  <article className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}>\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <div className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </div>\n);\n","import { useState } from 'react';\nimport './App.scss';\nimport { Render } from './rendering/Render';\nimport { Todo } from './types/Todo';\nimport todosFromServer from './api/todos';\nimport { getUserById } from './services/user';\nimport { TodoList } from './components/TodoList';\n\nconst todos = todosFromServer.map(el => {\n  return {\n    ...el,\n    user: getUserById(el.userId),\n  };\n});\n\nexport const App = () => {\n  const [list, setList] = useState<Todo[]>(todos);\n\n  const addList = (newList: Todo) => {\n    setList((currentList) => [...currentList, newList]);\n  };\n\n  return (\n    <div>\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n        <Render\n          todoList={list}\n          onSubmit={addList}\n        />\n\n        <TodoList todos={list} />\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n    user: 0,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n    user: 0,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n    user: 0,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}